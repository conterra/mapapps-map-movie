/* NumberSpinner - namespace "dijitSpinner"
 * 
 * Styling NumberSpinner mainly includes:
 * 
 * 1. Arrows
 * 		Outer containers: .dijitSpinnerButtonContainer|.dijitSpinnerButtonInner  - for border, padding and position
 * 		Arrows: .dijitArrowButton|.dijitUpArrowButton.|dijitDownArrowButton
 * 		Inner container: .dijitArrowButtonInner - for border, padding, width|height and background image
 * 
 * 2. Hover state
 * 		.dijitUpArrowButtonHover|.dijitDownArrowButtonHover .*  - for background color|image
 * 
 * 3. Active state
 * 		.dijitUpArrowButtonActive|.dijitDownArrowButtonActive .*  - for border, padding, margin and background color|image
 * 
 * 4. Focused state
 * 		.dijitSpinnerFocused .* - for background color|image
 * 
 * 5. Disabled state
 * 		.dijitSpinnerDisabled .* - for background color|image
 * 
 * 6. Border Radius Setup
 */

@import "../../themeSettings.less";

.@{themeName}{

    .dijitSpinnerButtonContainer {
        overflow: hidden;
        position: relative;
        width: auto;
        padding: 0;
    }
    .dijitSpinnerButtonContainer .dijitSpinnerButtonInner {
        border-width: 1px 0; /* reserve space to match the pure combobox button border with border and not padding to make IE happier */
        border-style: solid none;
    }

    /* button */
    .dijitSpinner .dijitArrowButton {
        width:auto;
        background-color: transparent; //@arrowbutton-background-color;  <-- background-color is generated by ButtonContainer to allow gradient from + to - button
        background-image:none;
        background-position:0px 0px;
        background-repeat:repeat-x;
        overflow: hidden;
    }


    .dijitSpinner .dijitSpinnerButtonInner {
        width: 17px;
    }
    /* up & down button icons */
    .dijitSpinner .dijitArrowButtonInner {
        //border:solid 1px @arrowbutton-inner-border-color;   <<-- we don't want any borders arround each button
        //border-bottom-width: 0; /* 2 top borders = 1 top+bottom border in ComboBox */
        .bgHD('../../images/spriteGraphics.png');
        background-repeat: no-repeat;
        height: 100%;
        width: 15px;
        padding-left: 1px;
        padding-right: 1px;

        /* for up arrow */
        background-position: -194px -153px;

        /* override button.css (TODO: move to Common.css since ComboBox needs this too) */
        display: block;
        //margin: -1px 0px -1px 0px;	/* compensate for inner border */  <<-- as we don't have inner borders anymore, we don't need this
        margin-top: 0; /* since its bottom aligned */
    }

    .dijitSpinner .dijitDownArrowButton .dijitArrowButtonInner {
        background-position: -149px -153px;
    }
    .dijitSpinner .dijitArrowButtonInner .dijitInputField {
        padding: 0;
    }


    .dijitSpinner .dijitUpArrowButton .dijitArrowButtonInner{
        background-position: -194px -153px;
    }

    .dijitSpinner .dijitUpArrowButtonHover .dijitArrowButtonInner,
    .dijitSpinner .dijitUpArrowButtonActive .dijitArrowButtonInner{
        background-position: -194px -198px;
    }

    /** hover & focused status **/

    .dijitSpinner .dijitUpArrowButtonActive,
    .dijitSpinner .dijitDownArrowButtonActive {
        background-color:@arrowbutton-pressed-background-color;
    }

    .dijitSpinner .dijitUpArrowButtonHover,
    .dijitSpinner .dijitDownArrowButtonHover{
        background-color: @arrowbutton-hovered-background-color;
    }

    .dijitSpinner .dijitDownArrowButtonHover .dijitArrowButtonInner,
    .dijitSpinner .dijitDownArrowButtonActive .dijitArrowButtonInner{
        background-position: -149px -198px;
    }

    .dijitSpinnerFocused {
        background-color: @textbox-focused-background-color;
        background-image: none;
    }

    .dijitSpinner .dijitUpArrowButtonActive .dijitArrowButtonInner,
    .dijitSpinner .dijitDownArrowButtonActive .dijitArrowButtonInner {
        /* hide inner border while button is depressed */
        border: 0px;
        padding: 1px;
        margin-right:2px;
        margin-bottom:1px;
    }

    /* disabled */
    .dijitSpinnerDisabled .dijitSpinnerButtonContainer{
        .resetBG();
        background: @disabled-background-color;
    }
    .dijitSpinnerDisabled .dijitUpArrowButton .dijitArrowButtonInner {
        background-position: -194px -243px;
    }
    .dijitSpinnerDisabled .dijitDownArrowButton .dijitArrowButtonInner {
        background-position: -149px -243px;
    }

    .setBorderRadius() when (@button-border-radius >0){
        //the following is only needed if button-border-radius is set to something greater then 0
        .dijitSpinner{ 
            .border-radius(@button-border-radius);
        }

        .dijitSpinner .dijitInputContainer{
            .border-radius(@button-border-radius 0 0 @button-border-radius);
        }

        .dijitSpinner .dijitSpinnerButtonContainer{
            .border-radius(0 (@button-border-radius - 1px) (@button-border-radius - 1px) 0);
        }
    }
    .setBorderRadius();
}

/** hacks for browsers **/
.dj_iequirks  {
    .@{themeName}{ 
        .dijitSpinner .dijitArrowButtonInner {
            width: 19px;
        }
        .dijitSpinner .dijitArrowButton {
            overflow: visible; /* 0 height w/o this */
        }
    }
}

/* for IE 7, when div is enlarged, 
 * should be no empty space between dijitInputLayoutContainer and dijitSpinner*/
.dj_ie7  {
    .@{themeName}{ 
        .dijitSpinner {
            overflow: visible;
        }
    }
}