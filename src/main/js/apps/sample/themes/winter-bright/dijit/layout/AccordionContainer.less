/* Accordion
 * 
 * Styling AccordionContainer basically means styling the accordion pane (dijitAccordionInnerContainer)
 * and the title inside of it (dijitAccordionTitle).   There are 4 basic states to style:
 * 
 * 1. accordion bounding container
 * 		.dijitAccordionContainer - container for the whole accordion 
 * 
 * 2. closed pane (and default styling): 
 * 		.dijitAccordionInnerContainer - container for each accordion child
 * 		.dijitAccordionTitle - title for each accordion child
 *
 * 3. active closed pane (ie, mouse down on a title bar)
 * 		.dijitAccordionInnerContainerActive - for background-color, border
 * 		.dijitAccordionInnerContainerActive dijitAccordionTitle - for text color
 * 
 * 4. open pane (expanded child)
 * 		These rules need to override the closed pane active:
 *
 * 		.dijitAccordionInnerContainerSelected - for background-color, border
 * 		.dijitAccordionInnerContainerSelected .dijitAccordionTitle - for text color
 * 
 * 5. hovered pane, open or closed
 * 		The selectors below affect hovering over both a closed pane (ie, hovering a title bar),
 * 		and hovering over an open pane.   Also, treat mouse down on an open pane as a hover:
 *
 * 		.dijitAccordionInnerContainerHover, .dijitAccordionInnerContainerSelectedActive - for background-color, border
 * 		.dijitAccordionInnerContainerHover .dijitAccordionTitle - for text color
 */
@import "../../themeSettings.less";

.@{themeName}{

    .dijitAccordionContainer {
            border:none;
    }
    .dijitAccordionInnerContainer {
            background-color: @unselected-background-color;	
            border:solid 1px @border-color;
            margin-bottom:1px;
            .transition-property(background-color,border);
            .transition-duration(.3s);
            .transition-timing-function(linear);
    }
    .dijitAccordionTitle {	
            padding: 5px 7px 2px 7px;
            min-height:17px;
            .transition(background-color, .35s, linear);
            .transition(border, .35s, linear);
            color:@unselected-text-color;
    }


    .dijitAccordionInnerContainerHover {	
        /* both open and closed */
	color:@text-color;
    }
    .dijitAccordionContainer .dijitAccordionContainer-child {
            background-color:transparent;
            /*
             * border style need to be !important to override the style "border:medium none !important"
             * in class ".dijitTabPane, .dijitStackContainer-child, .dijitAccordionContainer-child"
             */
            /* border:1px solid #757575 !important; */
            margin: 0px 2px 2px;
            padding: 9px;
    }



    /* Active state for closed pane */

    .dijitAccordionInnerContainerActive {
        border:1px solid @selected-border-color;
	background-color:@pressed-background-color;
	.transition-duration(.1s);

    }
    .dijitAccordionInnerContainerActive .dijitAccordionTitle {	
         color:@selected-text-color; 
    }

    /* Open (a.k.a. selected) pane */

    .dijitAccordionInnerContainerSelected {
          border-color:@selected-border-color;
          background-color: @pane-background-color;
    }
    .dijitAccordionTitleHover,
    .dijitAccordionTitleSelected {
            .standard-gradient(@ct-highlight-color);
            color: @ct-highlight-contrast-text-color;
            .transition(background, .2s, linear);
    }
    .dijitAccordionTitleSelected {
            font-weight: bold;
            .transition(font-weight, 1s, linear);
    }

    .dijitAccordionInnerContainerHover,
    .dijitAccordionInnerContainerSelectedActive {
        border:1px solid @hovered-border-color;
	background-color: @selected-background-color;
	.transition-duration(.2s);
    }

    .dijitAccordionInnerContainerSelectedHover .dijitAccordionContainer-child,
    .dijitAccordionInnerContainerSelectedActive .dijitAccordionContainer-child {
            background-color:transparent;
            /* border:1px solid #757575 !important; */
    }
}